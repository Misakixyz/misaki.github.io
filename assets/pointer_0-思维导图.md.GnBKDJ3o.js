import{_ as a,o as e,c as r,a8 as t}from"./chunks/framework.CSHfaWSZ.js";const q=JSON.parse('{"title":"指针","description":null,"frontmatter":{"title":"指针","hidden":true,"description":null,"tags":"指针","comment":true,"date":"2024-01-18T00:00:00.000Z","outline":[2,3]},"headers":[],"relativePath":"pointer/0-思维导图.md","filePath":"pointer/0-思维导图.md","lastUpdated":1717661601000}'),o={name:"pointer/0-思维导图.md"},h=t('<h1 id="征服c指针" tabindex="-1">征服C指针 <a class="header-anchor" href="#征服c指针" aria-label="Permalink to &quot;征服C指针&quot;">​</a></h1><h2 id="第一章-预备知识和复习" tabindex="-1">第一章 预备知识和复习 <a class="header-anchor" href="#第一章-预备知识和复习" aria-label="Permalink to &quot;第一章 预备知识和复习&quot;">​</a></h2><h2 id="第二章-c语言是怎样使用内存的" tabindex="-1">第二章 C语言是怎样使用内存的 <a class="header-anchor" href="#第二章-c语言是怎样使用内存的" aria-label="Permalink to &quot;第二章 C语言是怎样使用内存的&quot;">​</a></h2><h3 id="_2-1-虚拟地址" tabindex="-1">2-1 虚拟地址 <a class="header-anchor" href="#_2-1-虚拟地址" aria-label="Permalink to &quot;2-1 虚拟地址&quot;">​</a></h3><h3 id="_2-2-c语言中内存的使用方法" tabindex="-1">2-2 C语言中内存的使用方法 <a class="header-anchor" href="#_2-2-c语言中内存的使用方法" aria-label="Permalink to &quot;2-2 C语言中内存的使用方法&quot;">​</a></h3><h3 id="_2-3-函数与字符串字面量" tabindex="-1">2-3 函数与字符串字面量 <a class="header-anchor" href="#_2-3-函数与字符串字面量" aria-label="Permalink to &quot;2-3 函数与字符串字面量&quot;">​</a></h3><h3 id="_2-4-静态变量" tabindex="-1">2-4 静态变量 <a class="header-anchor" href="#_2-4-静态变量" aria-label="Permalink to &quot;2-4 静态变量&quot;">​</a></h3><h3 id="_2-5-自动变量-栈" tabindex="-1">2-5 自动变量(栈) <a class="header-anchor" href="#_2-5-自动变量-栈" aria-label="Permalink to &quot;2-5 自动变量(栈)&quot;">​</a></h3><h3 id="_2-6-利用malloc-动态分配-堆" tabindex="-1">2-6 利用malloc()动态分配(堆) <a class="header-anchor" href="#_2-6-利用malloc-动态分配-堆" aria-label="Permalink to &quot;2-6 利用malloc()动态分配(堆)&quot;">​</a></h3><h3 id="_2-7-对齐" tabindex="-1">2-7 对齐 <a class="header-anchor" href="#_2-7-对齐" aria-label="Permalink to &quot;2-7 对齐&quot;">​</a></h3><h3 id="_2-8-字节序" tabindex="-1">2-8 字节序 <a class="header-anchor" href="#_2-8-字节序" aria-label="Permalink to &quot;2-8 字节序&quot;">​</a></h3><h3 id="_2-9-关于语言规范和实现" tabindex="-1">2-9 关于语言规范和实现 <a class="header-anchor" href="#_2-9-关于语言规范和实现" aria-label="Permalink to &quot;2-9 关于语言规范和实现&quot;">​</a></h3><h2 id="第三章-语法" tabindex="-1">第三章 语法 <a class="header-anchor" href="#第三章-语法" aria-label="Permalink to &quot;第三章 语法&quot;">​</a></h2><h3 id="_3-1-解读c语音声明" tabindex="-1">3-1 解读C语音声明 <a class="header-anchor" href="#_3-1-解读c语音声明" aria-label="Permalink to &quot;3-1 解读C语音声明&quot;">​</a></h3><h3 id="_3-2-c语言数据类型" tabindex="-1">3-2 C语言数据类型 <a class="header-anchor" href="#_3-2-c语言数据类型" aria-label="Permalink to &quot;3-2 C语言数据类型&quot;">​</a></h3><h3 id="_3-3-表达式" tabindex="-1">3-3 表达式 <a class="header-anchor" href="#_3-3-表达式" aria-label="Permalink to &quot;3-3 表达式&quot;">​</a></h3><h3 id="_3-4-解读c语言声明-续" tabindex="-1">3-4 解读C语言声明(续) <a class="header-anchor" href="#_3-4-解读c语言声明-续" aria-label="Permalink to &quot;3-4 解读C语言声明(续)&quot;">​</a></h3><h3 id="_3-5-其他" tabindex="-1">3-5 其他 <a class="header-anchor" href="#_3-5-其他" aria-label="Permalink to &quot;3-5 其他&quot;">​</a></h3><h3 id="_3-6-数组与指针截然不同" tabindex="-1">3-6 数组与指针截然不同 <a class="header-anchor" href="#_3-6-数组与指针截然不同" aria-label="Permalink to &quot;3-6 数组与指针截然不同&quot;">​</a></h3><h2 id="第四章-数组和指针的常见用法" tabindex="-1">第四章 数组和指针的常见用法 <a class="header-anchor" href="#第四章-数组和指针的常见用法" aria-label="Permalink to &quot;第四章 数组和指针的常见用法&quot;">​</a></h2><h2 id="第五章-数据结构-指针的真正用法" tabindex="-1">第五章 数据结构 指针的真正用法 <a class="header-anchor" href="#第五章-数据结构-指针的真正用法" aria-label="Permalink to &quot;第五章 数据结构 指针的真正用法&quot;">​</a></h2><h2 id="第六章-拾遗" tabindex="-1">第六章 拾遗 <a class="header-anchor" href="#第六章-拾遗" aria-label="Permalink to &quot;第六章 拾遗&quot;">​</a></h2>',22),i=[h];function l(n,d,c,s,_,u){return e(),r("div",{"data-pagefind-body":!0},i)}const m=a(o,[["render",l]]);export{q as __pageData,m as default};
